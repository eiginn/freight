#!/bin/sh

# Remove a package to the Freight library.

#/ Usage: freight remove [-c <conf>] [-v] [-h] <package> <manager>/<distro>...
#/   -c <conf>, --conf=<conf> config file to parse
#/   -v, --verbose            verbose mode
#/   -h, --help               show this help message

set -e

usage() {
    grep "^#/" "$0" | cut -c"4-" >&2
    exit "$1"
}

while [ "$#" -gt 0 ]
do
	case "$1" in
		-c|--conf) CONF="$2" shift 2;;
		-c*) CONF="$(echo "$1" | cut -c"3-")" shift;;
		--conf=*) CONF="$(echo "$1" | cut -c"8-")" shift;;
		-v|--verbose) VERBOSE=1 shift;;
		-h|--help) usage 0;;
		-*) echo "# [freight] unknown switch: $1" >&2;;
		*) break;;
	esac
done

. "$(dirname $(dirname $0))/lib/freight/conf.sh"

# The non-option argument(s) following the last option are package files.
# Binary packages have only one but source packages require three.  When the
# last of these is found, the remaining arguments are each assumed to be
# `<manager>/<distro>` pairs for this (source) package.
shopt -s extglob
PACKAGES=''
while [ "$#" -gt 0 ]
do
	case "$1" in
                !(*/*))
                        PACKAGES="$1 $PACKAGES"
                        shift
                        ;;
		*) break;;
	esac
done

#[ -z "$PACKAGES" ] && usage 1
#[ -z "$*" ] && usage 1

# Enter the Freight library directory so that items in `$@` may be given as
# absolute paths or as partial paths of the form `<manager>/<distro>` that
# are ultimately taken relative to the Freight library.
cd "$VARLIB"

# Hard link this package into every `<manager>/<distro>` given in `$@`.
# These links will later be used to compile the `Release` and `Packages`
# files in the Freight cache.

# FIXME need full filename... for now need way to 

for PACKAGE in $PACKAGES
do
        . "/usr/lib/freight/apt.sh"
        for file in $(find $VARLIB/apt/$DIST -name "*$PACKAGE*" -type f -print)
        do
                BIN_NAME="$(dpkg-deb -I $file | egrep -i 'Package:' | cut -d: -f2- | awk '{print $1}')"
                if echo $BIN_NAME | grep -i $PACKAGE
                then
                    echo "# [freight] Removed $file"
                    rm ${file}
                    rm ${file}-control &> /dev/null || true
                fi
        done
done
